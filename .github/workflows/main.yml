name: main (monolith)

on:
  push:
    branches:
      - 'main'

permissions:
  checks: write
  contents: write
  id-token: write
  packages: write
  pull-requests: write

jobs:
  test-build-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: setup java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          distribution: zulu
          java-version: 21

      - name: setup gradle
        uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4

      - name: gradle test
        run: ./gradlew test

      - name: gradle build
        run: ./gradlew build

      - name: publish junit report
        uses: mikepenz/action-junit-report@cf701569b05ccdd861a76b8607a66d76f6fd4857 # v5
        if: always()
        with:
          report_paths: '**/test-junit-xml/**/TEST-*.xml'
          simplified_summary: true

      - name: create tag
        id: tag
        run: |
          export TZ="Europe/Stockholm"
          timestamp=$(date +'%y%m%d-%H%M%S')
          echo "tag=$timestamp" >> $GITHUB_OUTPUT

      - name: log in to the container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set up docker buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: build and push docker image
        id: push
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6
        with:
          context: .
          file: services/monolith/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.tag.outputs.tag }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: publish git tag
        run: |
          git tag ${{ steps.tag.outputs.tag }}
          git push origin ${{ steps.tag.outputs.tag }}

  release-to-development:
    runs-on: ubuntu-latest
    environment: development
    needs: [test-build-push]
    steps:
      - name: releasing to development
        run: echo "releasing tag ${{ needs.test-build-push.outputs.tag }} to development"

  release-to-staging:
    runs-on: ubuntu-latest
    environment: staging
    needs: [test-build-push, release-to-development]
    steps:
      - name: releasing to staging
        run: echo "releasing tag ${{ needs.test-build-push.outputs.tag }} to staging"